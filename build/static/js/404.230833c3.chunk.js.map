{"version":3,"file":"static/js/404.230833c3.chunk.js","mappings":"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","sources":["components/MUI/TextField.jsx","webpack://todopro/./src/components/NewNote/styles.module.css?7eef","components/NewNote/NewNote.jsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\n\r\n// @mui/material\r\nimport { TextField as TextFieldMUI } from \"@mui/material\";\r\n\r\nconst TextField = forwardRef((props, ref) => {\r\n  return <TextFieldMUI {...props}>{props?.children}</TextFieldMUI>;\r\n});\r\n\r\nexport default TextField;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"styles_main__fTqTp\"};","import React, { useState, useMemo, useCallback, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDebounce } from \"use-lodash-debounce\";\r\n\r\nimport { parseQueries } from \"some-javascript-utils/browser.js\";\r\n\r\n// @emotion/css\r\nimport { css } from \"@emotion/css\";\r\n\r\n// contexts\r\nimport { useNotes } from \"../../context/NotesProvider\";\r\nimport { useLanguage } from \"../../context/LanguageProvider\";\r\n\r\n// @mui/material\r\nimport TextField from \"../MUI/TextField\";\r\n\r\n// components\r\nimport Container from \"../Container/Container\";\r\n\r\n// styles\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction NewNote({ widthViewport }) {\r\n  const location = useLocation();\r\n\r\n  const { notesState, setNotesState } = useNotes();\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const debouncedTitle = useDebounce(title, 1000);\r\n\r\n  const handleTitle = useCallback(\r\n    (e) => {\r\n      if (id && id.length && notesState[id])\r\n        setNotesState({ type: \"editing\", id });\r\n      setTitle(e.target.value);\r\n    },\r\n    [id, notesState, setNotesState]\r\n  );\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const debouncedContent = useDebounce(content, 1000);\r\n\r\n  const handleContent = useCallback(\r\n    (e) => {\r\n      if (id && id.length && notesState[id])\r\n        setNotesState({ type: \"editing\", id });\r\n      setContent(e.target.value);\r\n    },\r\n    [id, notesState, setNotesState]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (id && id.length)\r\n      setNotesState({\r\n        type: \"add\",\r\n        newNote: { id, title: debouncedTitle, content: debouncedContent },\r\n      });\r\n  }, [debouncedContent, debouncedTitle, setNotesState]);\r\n\r\n  useEffect(() => {\r\n    if (id && id.length && notesState[id]) {\r\n      console.log(notesState[id].title);\r\n      setTitle(notesState[id].title);\r\n      setContent(notesState[id].content);\r\n    } else {\r\n      setTitle(\"\");\r\n      setContent(\"\");\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const { search } = location;\r\n    const query = parseQueries(search);\r\n    if (query.id) setId(query.id);\r\n  }, [location]);\r\n\r\n  const { languageState } = useLanguage();\r\n\r\n  const inputs = useMemo(() => {\r\n    return languageState.texts.Inputs;\r\n  }, [languageState]);\r\n\r\n  const inputSx = [\r\n    { width: \"100%\" },\r\n    { marginTop: \"20px\", width: \"100%\", height: \"100%\" },\r\n  ];\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const formCss = useMemo(\r\n    () =>\r\n      css({\r\n        transition: \"all 500ms ease\",\r\n        width: \"100%\",\r\n        paddingTop: \"1.5rem\",\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <form className={`${formCss} ${styles.main}`} onSubmit={handleForm}>\r\n      <Container\r\n        sx={{\r\n          position: \"relative\",\r\n          marginTop: widthViewport < 600 ? \"20px\" : 0,\r\n        }}\r\n      >\r\n        <TextField\r\n          label={inputs.title.label}\r\n          id={inputs.title.id}\r\n          type={inputs.title.type}\r\n          multiline={inputs.title.multiline}\r\n          minRows={inputs.title.minRows}\r\n          maxRows={inputs.title.maxRows}\r\n          placeholder={inputs.title.placeholder}\r\n          value={title}\r\n          sx={inputSx[0]}\r\n          disabled={!id || !id.length}\r\n          onChange={handleTitle}\r\n          required\r\n        />\r\n      </Container>\r\n      <Container sx={{ position: \"relative\" }}>\r\n        <TextField\r\n          label={inputs.content.label}\r\n          id={inputs.content.id}\r\n          type={inputs.content.type}\r\n          multiline={inputs.content.multiline}\r\n          minRows={inputs.content.minRows}\r\n          placeholder={inputs.content.placeholder}\r\n          value={content}\r\n          sx={inputSx[1]}\r\n          disabled={!id || !id.length}\r\n          onChange={handleContent}\r\n          required\r\n        />\r\n      </Container>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewNote;\r\n"],"names":["forwardRef","props","ref","TextField","children","widthViewport","location","useLocation","useNotes","notesState","setNotesState","useState","id","setId","title","setTitle","debouncedTitle","useDebounce","handleTitle","useCallback","e","length","type","target","value","content","setContent","debouncedContent","handleContent","useEffect","newNote","console","log","search","query","parseQueries","languageState","useLanguage","inputs","useMemo","texts","Inputs","inputSx","width","marginTop","height","formCss","css","transition","paddingTop","className","styles","onSubmit","preventDefault","Container","sx","position","label","multiline","minRows","maxRows","placeholder","disabled","onChange","required"],"sourceRoot":""}